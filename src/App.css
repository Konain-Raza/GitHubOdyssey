
:root {
  --background-color: #1e1e1e; /* Very dark background */
  --card-background-color: #2c2c2c; /* Darker card background */
  --card-border-color: #3a3a3a; /* Slightly lighter border for subtle distinction */
  --avatar-border-color: #3a3a3a; /* Same as card border */
  --text-color: #e0e0e0; /* Light grey text for good readability */
  --secondary-text-color: #b0b0b0; /* Slightly lighter grey for secondary text */
  --button-bg-color: #3498db; /* Vibrant blue for buttons */
  --button-hover-bg-color: #2980b9; /* Darker blue on hover */
  --link-color: #4a90e2; /* Bright blue for links */
  --link-hover-color: #357ab8; /* Darker blue on hover */
  --box-shadow: rgba(0, 0, 0, 0.7); /* Darker shadow for better contrast */
}

[data-theme="dark"] {
  --background-color: #121212;
  --card-background-color: #1e1e1e;
  --card-border-color: #333;
  --avatar-border-color: #444;
  --text-color: #e0e0e0;
  --secondary-text-color: #bbb;
  --button-bg-color: #1a73e8;
  --button-hover-bg-color: #0056b3;
  --link-color: #82aaff;
  --link-hover-color: #a1c4ff;
  --box-shadow: rgba(0, 0, 0, 0.5);
}
body{
  overflow: hidden;
}
:root {

  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: Arial, sans-serif;
  color: var(--text-color);

  background-repeat: no-repeat;
  background-image: url("https://user-images.githubusercontent.com/3369400/133268513-5bfe2f93-4402-42c9-a403-81c9e86934b6.jpeg");
  background-size: cover; /* Ensure the image covers the entire viewport */
  background-position: center; /* Center the image */
  background-attachment: fixed; /* Keep the background fixed during scrolling */
}



#search-container {
  margin: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
}

.searchBox {

  display: flex;
  width: clamp(10rem, 8.1818rem + 29.0909vw, 30rem);
  align-items: center;
  justify-content: space-between;
  gap: clamp(4px, 1%, 16px);
  background: var(--background-color);
  border-radius: 50px;
  padding: 5px;
  position: relative;
  box-shadow: 0 4px 8px var(--box-shadow);
  margin-top: 2vh;
  margin-bottom: 7vh;
}
.searchBox>input{
  color: white;
  width: 80%;
}

.searchButton {
  color: white;
  position: absolute;
  right: clamp(4px, 1%, 16px);
  width: clamp(40px, 10vw, 50px);
  height: clamp(40px, 10vw, 50px);
  border-radius: 50%;
  background: linear-gradient(45deg, #3498db, #2980b9);
  border: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background 0.3s ease, transform 0.3s ease;
}
.searchButton:hover {
  background: linear-gradient(45deg, #2980b9, #3498db); /* Reverse gradient on hover */
  transform: scale(1.05); /* Slightly scale up the button */
}



.searchButton:active {
  box-shadow: none;
}

.searchInput {
  border: none;
  background: none;
  outline: none;
  font-size: clamp(12px, 2vw, 15px);
  padding: clamp(12px, 2vw, 24px) clamp(24px, 4vw, 46px) clamp(12px, 2vw, 24px)
    clamp(16px, 2vw, 26px);
}

.card {
  width: clamp(10rem, 8.6364rem + 21.8182vw, 25rem);
  height: max-content;
  margin: auto;
  border: 1px solid var(--card-border-color);
  border-radius: 20px;
  overflow: hidden;
  padding: 10px;
  height: max-content;
  box-shadow: 0 4px 8px var(--box-shadow);
  background-color: var(--card-background-color);
  transition: transform 300ms ease, box-shadow 300ms ease;
}
a{
  text-decoration: none;
}
.card:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 16px var(--box-shadow);
}

.card-header {
  text-align: center;
  padding: 5px;
  background-color: var(--card-background-color);

}

.avatar {
  border-radius: 50%;
  width: 100px;
  height: 100px;
  border: 4px solid var(--avatar-border-color);
  margin-bottom: 10px;
}

.name {
  font-size: 24px;
  font-weight: bold;
  margin: 5px 0;
}

.username {
  margin: 0;
  padding: 0;
  color: var(--secondary-text-color);
  font-size: 16px;
}

.card-body {
  
  padding: 16px;
  text-align: center;
}

.bio {
  font-size: 14px;
  color: var(--text-color);
  margin-bottom: 12px;
}

.location,
.followers,
.following,
.public-repos {
  font-size: 14px;
  color: var(--secondary-text-color);
  padding-bottom: 0.5vh;
}
.followers, .following {
  background-color: black;
  padding: 10px;
  border-radius: 10px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  color: white;
  margin: 5px 10px;
}

.followers .count, .following .count {
  font-weight: bold;
}


.follow-button,
.following-button {
  display: inline-block;
  padding: 8px 16px;
  margin: 4px;
  border: none;
  border-radius: 20px;
  background-color: var(--button-bg-color);
  color: #fff;
  font-size: 14px;
  cursor: pointer;
  transition: background-color 300ms ease, transform 300ms ease;
}

.follow-button:hover,
.following-button:hover {
  background-color: var(--button-hover-bg-color);
  transform: scale(1.05);
}

.profile-link {
  display: block;
  text-align: center;
  font-size: 14px;
  color: var(--link-color);
  text-decoration: none;
  margin-top: 12px;
  transition: color 300ms ease;
}

.profile-link:hover {
  color: var(--link-hover-color);
  text-decoration: underline;
}

/* Base styles (unchanged from your existing styles) */
.sparkle-button {
  margin-top: 1vh;
  --active: 0;
  --bg: radial-gradient(
      40% 50% at center 100%,
      hsl(270 calc(var(--active) * 97%) 72% / var(--active)),
      transparent
    ),
    radial-gradient(
      80% 100% at center 120%,
      hsl(260 calc(var(--active) * 97%) 70% / var(--active)),
      transparent
    ),
    hsl(260 calc(var(--active) * 97%) calc((var(--active) * 44%) + 12%));
  background: var(--bg);
  font-size: 1rem;
  font-weight: 500;
  margin: auto;
  border: 0;
  cursor: pointer;
  padding: 1rem;
  display: flex;
  align-items: center;
  gap: 0.25em;
  white-space: nowrap;
  border-radius: 100px;
  position: relative;
  box-shadow: 0 0 calc(var(--active) * 3em) calc(var(--active) * 1em)
      hsl(260 97% 61% / 0.75),
    0 0em 0 0
      hsl(260 calc(var(--active) * 97%) calc((var(--active) * 50%) + 30%)) inset,
    0 -0.05em 0 0 hsl(260 calc(var(--active) * 97%) calc(var(--active) * 60%)) inset;
  transition: box-shadow var(--transition), scale var(--transition),
    background var(--transition);
  scale: calc(1 + (var(--active) * 0.1));
  transition: 0.3s;
}

.sparkle-button:active {
  scale: 1;
  transition: 0.3s;
}

.sparkle path {
  color: hsl(0 0% calc((var(--active, 0) * 70%) + var(--base)));
  transform-box: fill-box;
  transform-origin: center;
  fill: currentColor;
  stroke: currentColor;
  animation-delay: calc((var(--transition) * 1.5) + (var(--delay) * 1s));
  animation-duration: 0.6s;
  transition: color var(--transition);
}

.sparkle-button:is(:hover, :focus-visible) path {
  animation-name: bounce;
}

@keyframes bounce {
  35%,
  65% {
    scale: var(--scale);
  }
}

.sparkle path:nth-of-type(1) {
  --scale: 0.5;
  --delay: 0.1;
  --base: 40%;
}

.sparkle path:nth-of-type(2) {
  --scale: 1.5;
  --delay: 0.2;
  --base: 20%;
}

.sparkle path:nth-of-type(3) {
  --scale: 2.5;
  --delay: 0.35;
  --base: 30%;
}

.sparkle-button:before {
  content: "";
  position: absolute;
  inset: -0.2em;
  z-index: -1;
  border: 0.25em solid hsl(260 97% 50% / 0.5);
  border-radius: 100px;
  opacity: var(--active, 0);
  transition: opacity var(--transition);
}

.spark {
  position: absolute;
  inset: 0;
  border-radius: 100px;
  rotate: 0deg;
  overflow: hidden;
  mask: linear-gradient(white, transparent 50%);
  animation: flip calc(var(--spark) * 2) infinite steps(2, end);
}

@keyframes flip {
  to {
    rotate: 360deg;
  }
}

.spark:before {
  content: "";
  position: absolute;
  width: 200%;
  aspect-ratio: 1;
  top: 0%;
  left: 50%;
  z-index: -1;
  translate: -50% -15%;
  rotate: 0;
  transform: rotate(-90deg);
  opacity: calc((var(--active)) + 0.4);
  background: conic-gradient(from 0deg, transparent 0 340deg, white 360deg);
  transition: opacity var(--transition);
  animation: rotate var(--spark) linear infinite both;
}

.spark:after {
  content: "";
  position: absolute;
  inset: var(--cut);
  border-radius: 100px;
}

.backdrop {
  position: absolute;
  inset: var(--cut);
  background: var(--bg);
  border-radius: 100px;
  transition: background var(--transition);
}

@keyframes rotate {
  to {
    transform: rotate(90deg);
  }
}

@supports (selector(:has(:is(+ *)))) {
  body:has(button:is(:hover, :focus-visible)) {
    --active: 1;
    --play-state: running;
  }

  .bodydrop {
    display: none;
  }
}

.sparkle-button:is(:hover, :focus-visible) ~ :is(.bodydrop, .particle-pen) {
  --active: 1;
  --play-state: runnin;
}

.sparkle-button:is(:hover, :focus-visible) {
  --active: 1;
  --play-state: running;
}

.sp {
  position: relative;
}

.particle-pen {
  position: absolute;
  width: 200%;
  aspect-ratio: 1;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  -webkit-mask: radial-gradient(white, transparent 65%);
  z-index: -1;
  opacity: var(--active, 0);
  transition: opacity var(--transition);
}

.particle {
  fill: white;
  width: calc(var(--size, 0.25) * 1rem);
  aspect-ratio: 1;
  position: absolute;
  top: calc(var(--y) * 1%);
  left: calc(var(--x) * 1%);
  opacity: var(--alpha, 1);
  animation: float-out calc(var(--duration, 1) * 1s) calc(var(--delay) * -1s)
    infinite linear;
  transform-origin: var(--origin-x, 1000%) var(--origin-y, 1000%);
  z-index: -1;
  animation-play-state: var(--play-state, paused);
}

.particle path {
  fill: hsl(0 0% 90%);
  stroke: none;
}

.particle:nth-of-type(even) {
  animation-direction: reverse;
}

@keyframes float-out {
  to {
    rotate: 360deg;
  }
}

.text {
  translate: 2% -6%;
  letter-spacing: 0.01ch;
  background: linear-gradient(
    90deg,
    hsl(0 0% calc((var(--active) * 100%) + 65%)),
    hsl(0 0% calc((var(--active) * 100%) + 26%))
  );
  -webkit-background-clip: text;
  color: transparent;
  transition: background var(--transition);
}

.sparkle-button svg {
  inline-size: 1.25em;
  translate: -25% -5%;
}

/* Responsive Styles */
@media (max-width: 1200px) {
  .sparkle-button {
    font-size: 1rem;
    padding: 0.8em;
  }
  .sparkle-button svg {
    inline-size: 1em;
  }
}

@media (max-width: 768px) {
  .sparkle-button {
    font-size: 0.9rem;
    padding: 0.6em 0.6em;
  }
  .sparkle-button svg {
    inline-size: 0.8em;
  }
}

@media (max-width: 480px) {
  .sparkle-button {
    font-size: 0.8rem;
    padding: 0.5em 0.5em;
  }
  .sparkle-button svg {
    inline-size: 0.75em;
  }
}
